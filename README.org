
* Eazy-Gnuplot 

Super Duper Doopa Booka Lispy Gnuplot library

- Structure-less -- no CFFI, no CLOS, no STRUCTURE 
- Just print the data to the =*standard-output*= inside =plot= function

** Usage

Write 1 =with-plots= and (at least) 1 =gp-setup= per output file.
=gp-setup= can set any attributes -- mighty
=&allow-other-keys=. /no compatibility issue re: different gnuplot!/.

#+BEGIN_SRC lisp
;;; when :debug is non-nil, gnuplot code is copied to *trace-output*
(with-plots (*standard-output* :debug t)
   (gp-setup :xlabel "x-label"       ; strings are "quoted"
             :ylabel "y-label"
             :output path            ; pathnames are "quoted"
             :terminal :pdf          ; keyword/symbols are not quoted
                                     ; (but not escaped)
             :key '(:bottom :right :font "Times New Roman, 6")
             ;; list contents are recursively quoted
             ;; then joined by a space
             :pointsize "0.4px")
   (func-plot "sin(x)" :title "super sin curve!")
   (plot (lambda ()
           (format t "~&0 0")
           (format t "~&1 1"))
         :using '(1 2)
         :title "1"
         :with '(:linespoint))
   (plot (lambda ()
           (format t "~&0 1")
           (format t "~&1 0"))
         :using '(1 2)
         :title "2"
         :with '(:lines)))
#+END_SRC

This produces the following gnuplot code internally. It will then be fed
into gnuplot interpreter, resulting in [[https://raw.githubusercontent.com/guicho271828/eazy-gnuplot/master/sample.pdf][this]] pdf.

#+BEGIN_SRC gnuplot
set xlabel "x-label"
set ylabel "y-label"
set output "/mnt/video/guicho/repos/lisp/eazy-gnuplot/sample.pdf"
set terminal pdf
set key bottom right font "Times New Roman, 6"
set pointsize "0.4px"
plot sin(x) title "super sin curve!", '-' using 1:2 title "1" with linespoint, '-' using 1:2 title "2" with lines
0 0
1 1
end
0 1
1 0
end
#+END_SRC

** Dependencies

This library is at least tested on implementation listed below:

+ SBCL 1.2.1 on X86-64 Linux  3.13.0-39-generic (author's environment)

Also, it depends on the following libraries:

+ ITERATE by  ::
    Jonathan Amsterdam's iterator/gatherer/accumulator facility

+ OPTIMA by Tomohiro Matsuyama ::
    Optimized Pattern Matching Library

+ ALEXANDRIA by  ::
    Alexandria is a collection of portable public domain utilities.

+ TRIVIAL-SHELL by Gary Warren King <gwking@metabang.com> ::
    OS and Implementation independent access to the shell

** Author

+ Masataro Asai

* Copyright

LLGPL



